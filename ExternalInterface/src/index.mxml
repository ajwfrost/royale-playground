<?xml version="1.0" encoding="utf-8"?>
<js:Application xmlns:js="library://ns.apache.org/royale/basic" xmlns:fx="http://ns.adobe.com/mxml/2009" applicationComplete="startTest()">
  <js:valuesImpl>
    <js:SimpleCSSValuesImpl/>
  </js:valuesImpl>
  <js:initialView>
    <js:View>
      <js:TextArea id="textOutput" percentWidth="100" height="500">
      </js:TextArea>
    </js:View>
  </js:initialView>
  <fx:Script>
    <![CDATA[
        import mx.external.ExternalInterface;
        public function startTest() : void
        {
            textOutput.text += "Testing\n";
            if (ExternalInterface.available) textOutput.text += "ExternalInterface is available\n";
            var num1 : uint = 5;
            var num2 : uint = 11;
            var num3 : uint = ExternalInterface.call("addNumbers", num1, num2);
            textOutput.text += "Result is " + num3 + "\n";
            
            // kick off the async task
            ExternalInterface.objectID = "TestExtInt"; // to match our javascript code
            ExternalInterface.addCallback("callIntoRoyale", ourCallback); // our callback can have a different name..
            ExternalInterface.call("asyncCall");
        }
        
        private function ourCallback(strFromJS : String) : void
        {
            // scope is kept i.e. "this" refers to the object where we called "addCallback" from..
            textOutput.text += "Received information from JavaScript:\n" + strFromJS + "\n";
        }
    ]]>
  </fx:Script>
</js:Application>
