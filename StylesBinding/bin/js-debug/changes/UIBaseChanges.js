/**
 * Generated by Apache Royale Compiler from changes\UIBaseChanges.as
 * changes.UIBaseChanges
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('changes.UIBaseChanges');
/* Royale Dependency List: org.apache.royale.core.IBead,org.apache.royale.core.ValuesManager,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.html.Container');



/**
 * @constructor
 * @extends {org.apache.royale.html.Container}
 */
changes.UIBaseChanges = function() {
  changes.UIBaseChanges.base(this, 'constructor');
};
goog.inherits(changes.UIBaseChanges, org.apache.royale.html.Container);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('changes.UIBaseChanges', changes.UIBaseChanges);


changes.UIBaseChanges.prototype.set__style = function(value) {
  org.apache.royale.utils.Language.trace("Setting style...");
  if (this._style !== value) {
    var /** @type {org.apache.royale.core.IBead} */ styleAsBead = org.apache.royale.utils.Language.as(this._style, org.apache.royale.core.IBead);
    if (styleAsBead)
      styleAsBead.strand = null;
    if (org.apache.royale.utils.Language.is(value, String)) {
      this._style = org.apache.royale.core.ValuesManager["valuesImpl"].parseStyles(org.apache.royale.utils.Language.as(value, String));
    }
    else
      this._style = value;
    if (!isNaN(this.y))
      this._style.top = this.y;
    if (!isNaN(this.x))
      this._style.left = this.x;
    if (this.parent)
      org.apache.royale.core.ValuesManager["valuesImpl"].applyStyles(this, this._style);
    this.dispatchEvent(new Event("stylesChanged"));
    styleAsBead = org.apache.royale.utils.Language.as(this._style, org.apache.royale.core.IBead);
    if (styleAsBead)
      styleAsBead.strand = this;
  }
};


Object.defineProperties(changes.UIBaseChanges.prototype, /** @lends {changes.UIBaseChanges.prototype} */ {
/**
  * @export
  * @type {Object} */
style: {
get: org.apache.royale.core.UIBase.prototype.get__style,
set: changes.UIBaseChanges.prototype.set__style}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
changes.UIBaseChanges.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'UIBaseChanges', qName: 'changes.UIBaseChanges', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
changes.UIBaseChanges.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'style': { type: 'Object', access: 'writeonly', declaredBy: 'changes.UIBaseChanges'}
      };
    },
    methods: function () {
      return {
        'UIBaseChanges': { type: '', declaredBy: 'changes.UIBaseChanges'}
      };
    }
  };
};
